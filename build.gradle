buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}
plugins {
    id 'net.franz-becker.gradle-lombok' version '1.5'
	id 'com.matthewprenger.cursegradle' version '1.0.7'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

import org.ajoberstar.grgit.Grgit

def repo = Grgit.open(project.file('.'))
project.ext.gitHash = repo.log().find().abbreviatedId

boolean dev = System.getenv('RELEASE') == null || System.getenv('RELEASE').equals('false');

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER') != null ? System.getenv('BUILD_NUMBER') : project.ext.gitHash

version = "MC${minecraft_version}-${mod_version}.${buildnumber}"
group = "team.chisel.resourcepacks" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = dev ? "ChiselResourcePacks_DEV" : "ChiselResourcePacks"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    version = "${minecraft_version}-${forge_version}"
    mappings = 'snapshot_20160318'
    runDir = "run"
	
	useDepAts = true

    replaceIn "Chisel.java"
    replace "@VERSION@", project.version
	
	coreMod = 'team.chisel.resourcepacks.common.asm.ChiselCorePlugin'
}

repositories {
	maven { // Chisel
		url "http://maven.tterrag.com/"
	}
}

dependencies {
	deobfCompile "team.chisel:Chisel:MC${minecraft_version}-${chisel_version}"
}

lombok {
    version = "1.16.8"
    sha256 = "fe32b29b7b33eb2b19866cbc5345c59c9984a6036cc396856a04c0d09f99ea68"
}

import net.franz_becker.gradle.lombok.task.DelombokTask

task delombok(type: DelombokTask) {
    args("src/main/java", "-d", "build/sources/delomboked/java")
}

tasks.eclipse.dependsOn installLombok

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
		expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
    }
}

jar.manifest {
    attributes 'FMLAT': 'chisel_resourcepacks_at.cfg'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        }
    }
}

String getChangelogText() {
    def changelogFile = file('changelog.txt')
    String str = ''
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (it.size() > 1) {
            def temp = it
            if (lineCount == 0) {
                temp = "Chisel ${version}"
                temp = "<h2>$temp</h2>"
            } else if (it.startsWith('-')) {
                temp = "&nbsp;&nbsp;&nbsp;$temp"
            } else {
                temp = "<h4>$temp</h4>"
            }
            str += "$temp<br/>"
            lineCount++
            return
        } else {
            done = true
        }
    }
    return str
}

tasks.curseforge.enabled = !dev && project.hasProperty('curseforge_key')
    
curseforge {
    if (project.hasProperty('curseforge_key')) {
        apiKey = project.curseforge_key
    }

    project {
        id = project.projectId
        changelog = System.getenv('CHANGELOG') == null || System.getenv('CHANGELOG').equals('none') ? getChangelogText() : System.getenv('CHANGELOG')
        changelogType = 'html'
        releaseType = 'alpha'
        mainArtifact(jar) {
            displayName = "Chisel Resource Packs- ${version}"
        }
    }
}

